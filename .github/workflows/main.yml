<<<<<<< HEAD
name: GitHub Actions Demo

on:
  push:
    branches: 
      - main
      - 'feature/*'
  pull_request:
    branches: 
      - main
      - 'feature/*'

permissions:
  contents: read
  checks: write
  pull-requests: write
=======
name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: 
  push:
    branches:
      - main
      - 'feature/hamzahaline'
      - 'feature/test-build'
>>>>>>> cfd6920ddc6bf6b09e6045fa0dce3f5df9e69257

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      # Installs Java 8 on the runner
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      
      # Compiles the application
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots package
<<<<<<< HEAD
      
      # Publishes the test results
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: target/**/*.xml
      
      # Publishes the build artifact
=======

      # Publie les fichiers prÃ©sents dans le dossier target dans un build artifact
>>>>>>> cfd6920ddc6bf6b09e6045fa0dce3f5df9e69257
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: my-app-1.0
          path: target/*
      
      # Installs Docker command on the runner
      - name: Install Docker
        uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true
<<<<<<< HEAD

      # Build the Docker image
=======
      # Publie les rÃ©sultats de test
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: target/**/*.xml
          github_token: ${{ secrets.INPUT_GITHUB_TOKEN }}

          
      # Build l'image Docker
>>>>>>> cfd6920ddc6bf6b09e6045fa0dce3f5df9e69257
      - name: Docker build
        run: |
          docker build -t my-app:1.0 .
